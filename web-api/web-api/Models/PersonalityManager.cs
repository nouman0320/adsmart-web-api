using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace web_api.Models
{
    public class PersonalityManager
    {
        AppPosts dto;
        public PersonalityManager(AppPosts dto)
        {
            this.dto = dto;
        }

        public void startThread()
        {
      
            //before loop
            var csv = new StringBuilder();
            var header = string.Format("{0},{1}", "email", "post");
            csv.AppendLine(header);
            String email = dto.Email;
            for (int i = 0; i < dto.Data.Length; i++)
            {
                var first = email;
                var second = dto.Data[i].Text;
                var newLine = string.Format("{0},\"{1}\"", first, second);
                csv.AppendLine(newLine);
            }

            System.Diagnostics.Debug.WriteLine("===========================");
            System.Diagnostics.Debug.Write(csv);
            System.Diagnostics.Debug.WriteLine("===========================");

            File.WriteAllText("D:\\University\\Sem_8\\FYP\\FYP-FINAL-CODE\\adsmart-web-api\\web-api\\web-api\\Python\\raw_output.csv", csv.ToString());
            // now time to execute python script
            runPython("raw_output.csv");
            //System.Diagnostics.Debug.Write(result);

        }


        public void runPython(string csv)
        {
            /*
            ProcessStartInfo start = new ProcessStartInfo();
            start.FileName = @"C:\Users\SideWinderX37\Anaconda3\python.exe D:\University\Sem_8\FYP\FYP-FINAL-CODE\adsmart-web-api\web-api\web-api\Python\test.py";
            start.Arguments = string.Format("\"{0}\"", csv);
            start.UseShellExecute = false;// Do not use OS shell
            start.CreateNoWindow = true; // We don't need new window
            start.RedirectStandardOutput = true;// Any output, generated by application will be redirected back
            start.RedirectStandardError = true; // Any error in standard output will be redirected back (for example exceptions)
            using (Process process = Process.Start(start))
            {
                using (StreamReader reader = process.StandardOutput)
                {
                    string stderr = process.StandardError.ReadToEnd(); // Here are the exceptions from our Python script
                    string result = reader.ReadToEnd(); // Here is the result of StdOut(for example: print "test")
                    return result;
                }
            }*/


            //


            Process p = new Process(); // create process to run the python program
            p.StartInfo.FileName = "C:\\Users\\SideWinderX37\\Anaconda3\\python.exe"; //Python.exe location
            p.StartInfo.RedirectStandardOutput = true;
            p.StartInfo.UseShellExecute = false; // ensures you can read stdout
            p.StartInfo.Arguments = "D:\\University\\Sem_8\\FYP\\FYP-FINAL-CODE\\adsmart-web-api\\web-api\\web-api\\Python\\test.py " + csv; // start the python program with two parameters
            p.Start(); // start the process (the python program)
            StreamReader s = p.StandardOutput;
            String output = s.ReadToEnd();
            System.Diagnostics.Debug.WriteLine(output);
            //Console.WriteLine(output);
            p.WaitForExit();
        }

    }
}
